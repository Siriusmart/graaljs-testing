plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'com.github.johnrengelman.shadow' version '8.1.1'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

project.ext.graalVersion = "24.2.1"

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	shadow(implementation "org.graalvm.sdk:graal-sdk:${graalVersion}")
	shadow(implementation "org.graalvm.truffle:truffle-api:${graalVersion}")
	shadow(implementation "org.graalvm.js:js-language:${graalVersion}")
	shadow(implementation "org.graalvm.js:js-scriptengine:${graalVersion}")
    shadow(implementation "org.graalvm.polyglot:polyglot:${graalVersion}")
    shadow(implementation "org.graalvm.polyglot:js:${graalVersion}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

shadowJar {
	archiveClassifier.set("dev")
	configurations = [project.configurations.shadow]
	// from sourceSets.client.output

	from("LICENSE") {
		into "META-INF"
		rename { "${project.archives_base_name}-LICENSE.txt" }
	}

	mergeServiceFiles()
	relocate 'org.graalvm', 'net.me2.libs.graalvm'
	relocate 'net.bytebuddy', 'net.me2.libs.bytebuddy'

	manifest {
		attributes(
				'Implementation-Title':       project.name,
				'Implementation-Version':     project.version,
				'Built-By':                   System.getProperty('user.name'),
				// 'Built-Date':                 new Date(),
				'License':                    "See ${project.archives_base_name}-LICENSE.txt"
		)
	}
}

remapJar {
	dependsOn(shadowJar)
	inputFile = tasks.shadowJar.archiveFile

	from("LICENSE") {
		into "META-INF"
		rename { "${project.archives_base_name}-LICENSE.txt" }
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}